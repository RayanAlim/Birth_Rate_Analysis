# Check for no unexpected NA values that indicate incorrect merges
expect_false(any(is.na(merged_data$`State Minimum Wage`)))
expect_false(any(is.na(merged_data$numbirth1544)))
})
# Test merging of data sets
test_that("Datasets are merged correctly", {
expect_true(exists("merged_data"))
})
# Check for no unexpected NA values that indicate incorrect merges
expect_false(any(is.na(merged_data$`State Minimum Wage`)))
# Test aggregation and calculation
test_that("Aggregations and calculations are correct", {
expect_true(exists("average_data"))
expect_true(exists("max_births"))
expect_true(exists("max_wage"))
expect_true(exists("scaling_factor"))
# Check for correct summarization
expect_true(all(c("Average_Minimum_Wage", "Average_Births") %in% names(average_data)))
# Validate scaling factor calculation
expect_equal(scaling_factor, max_wage / max_births)
})
#### Difference in Difference
# Define the policy change years manually
policy_changes <- data.frame(
stname = c("AZ", "GA", "MN", "NC", "OK", "TX", "WV"),
year_implemented = c(2009, 2005, 2003, 2011, 2005, 2003, 2003)
)
# Merge policy change years with the main dataset
combined_data <- left_join(combined_data, policy_changes, by = "stname")
# Fill NAs for states without a policy change in 'year_implemented'
combined_data <- combined_data %>%
mutate(year_implemented = ifelse(is.na(year_implemented), max(year) + 1, year_implemented))
# Create treatment and post_policy indicators
combined_data <- combined_data %>%
mutate(treatment = ifelse(stname %in% policy_changes$stname, 1, 0),
post_policy = ifelse(year >= year_implemented, 1, 0),
treatment_x_post = treatment * post_policy)
# Run the difference-in-differences regression
did_model <- lm(relative_births ~ treatment + post_policy + treatment_x_post, data = combined_data)
# Get the summary of the model
summary_did <- summary(did_model)
# More detailed output including robust standard errors
robust_summary <- coeftest(did_model, vcov = vcovHC(did_model, type = "HC1"))
# Print the summaries
print(summary_did)
print(robust_summary)
# Test calculations are correct
test_that("Calculations are correct", {
expect_true(exists("average_data"))
expect_true(exists("max_births"))
expect_true(exists("max_wage"))
expect_true(exists("scaling_factor"))
# Check for correct summarization
expect_true(all(c("Average_Minimum_Wage", "Average_Births") %in% names(average_data)))
# Validate scaling factor calculation
expect_equal(scaling_factor, max_wage / max_births)
})
library(readxl)
library(dplyr)
library(readr)
library(haven)
library(broom)
library(lmtest)
library(sandwich)
# Load the necessary data
abortion_policy <- read_dta("../data/analysis_data/annual_policy/policyvars01_19.dta") %>%
filter(year >= 2001, year <= 2019) %>%
select(delay, stname, year)
population_data <- read_excel("../data/UKCPR_National_Welfare_Data_Update_020623.xlsx", sheet = "Data") %>%
select(state_name, year, Population) %>%
filter(year >= 2001, year <= 2019)
numbirths_data <- read_csv("../data/analysis_data/annual_policy/numbirths_2001_2019.csv") %>%
rename(births = numbirth1544) %>%
filter(year >= 2001, year <= 2019)
# Merge the datasets
population_data <- rename(population_data, stname = state_name)
births_population_data <- left_join(numbirths_data, population_data, by = c("year", "stname"))
births_population_data <- mutate(births_population_data, relative_births = (births / Population) * 1000)
combined_data <- left_join(abortion_policy, births_population_data, by = c("year", "stname"))
# Define the policy change years manually
policy_changes <- data.frame(
stname = c("AZ", "GA", "MN", "NC", "OK", "TX", "WV"),
year_implemented = c(2009, 2005, 2003, 2011, 2005, 2003, 2003)
)
# Merge policy change years with the main dataset
combined_data <- left_join(combined_data, policy_changes, by = "stname")
# Fill NAs for states without a policy change in 'year_implemented'
combined_data <- combined_data %>%
mutate(year_implemented = ifelse(is.na(year_implemented), max(year) + 1, year_implemented))
# Create treatment and post_policy indicators
combined_data <- combined_data %>%
mutate(treatment = ifelse(stname %in% policy_changes$stname, 1, 0),
post_policy = ifelse(year >= year_implemented, 1, 0),
treatment_x_post = treatment * post_policy)
# Run the difference-in-differences regression
did_model <- lm(relative_births ~ treatment + post_policy + treatment_x_post, data = combined_data)
# Get the summary of the model
summary_did <- summary(did_model)
# More detailed output including robust standard errors
robust_summary <- coeftest(did_model, vcov = vcovHC(did_model, type = "HC1"))
# Print the summaries
print(summary_did)
print(robust_summary)
view(combined_data)
View(combined_data)
#### Tests ####
library(testthat)
# Test data import and initial processing
test_that("Data is imported and filtered correctly", {
expect_true(exists("numbirths_2001_2019"))
# Ensure the dataset contains the expected columns
expect_true(all(c("year", "stname", "numbirth1544") %in% names(numbirths_2001_2019)))
# Check if the filtering by year is correct
expect_true(all(numbirths_2001_2019$year >= 2001 & numbirths_2001_2019$year <= 2019))
})
# Define the policy implementation years for the states that changed their policy
policy_change_years <- data.frame(
stname = c("AZ", "GA", "MN", "NC", "OK", "TX", "WV"),
year_implemented = c(2009, 2005, 2003, 2011, 2005, 2003, 2003)
)
# Add the year_implemented to the combined_data
combined_data <- left_join(combined_data, policy_change_years, by = "stname")
# Now we'll create the post_policy and treatment variables
combined_data <- combined_data %>%
mutate(post_policy = if_else(year >= year_implemented, 1, 0, 0),
treatment = if_else(stname %in% policy_change_years$stname, 1, 0))
# For states without a policy change, make sure year_implemented is greater than any year in the dataset
combined_data <- combined_data %>%
mutate(year_implemented = ifelse(is.na(year_implemented), max(year) + 1, year_implemented))
# Now create the interaction term for the DiD analysis
combined_data <- combined_data %>%
mutate(treatment_x_post = treatment * post_policy)
# Check to ensure that we have variation in the treatment_x_post variable
print(table(combined_data$treatment, combined_data$post_policy))
# Run the difference-in-differences regression
did_model <- lm(relative_births ~ treatment + post_policy + treatment_x_post, data = combined_data)
# Get the summary of the model
summary_did <- summary(did_model)
# More detailed output including robust standard errors
robust_summary <- coeftest(did_model, vcov = vcovHC(did_model, type = "HC1"))
# Print the summaries
print(summary_did)
print(robust_summary)
# Define the policy implementation years for the states that changed their policy
policy_change_years <- data.frame(
stname = c("AZ", "GA", "MN", "NC", "OK", "TX", "WV"),
year_implemented = c(2009, 2005, 2003, 2011, 2005, 2003, 2003)
)
# Add the year_implemented to the combined_data
combined_data <- left_join(combined_data, policy_change_years, by = "stname")
# Now we'll create the post_policy and treatment variables
combined_data <- combined_data %>%
mutate(post_policy = if_else(year >= year_implemented, 1, 0, 0),
treatment = if_else(stname %in% policy_change_years$stname, 1, 0))
# For states without a policy change, make sure year_implemented is greater than any year in the dataset
combined_data <- combined_data %>%
mutate(year_implemented = ifelse(is.na(year_implemented), max(year) + 1, year_implemented))
# Now create the interaction term for the DiD analysis
combined_data <- combined_data %>%
mutate(treatment_x_post = treatment * post_policy)
# Check to ensure that we have variation in the treatment_x_post variable
print(table(combined_data$treatment, combined_data$post_policy))
# Run the difference-in-differences regression
did_model <- lm(relative_births ~ treatment + post_policy + treatment_x_post, data = combined_data)
# Get the summary of the model
summary_did <- summary(did_model)
# More detailed output including robust standard errors
robust_summary <- coeftest(did_model, vcov = vcovHC(did_model, type = "HC1"))
# Print the summaries
print(summary_did)
print(robust_summary)
# Define the policy implementation years for the states that changed their policy
policy_change_years <- data.frame(
stname = c("AZ", "GA", "MN", "NC", "OK", "TX", "WV"),
year_implemented = c(2009, 2005, 2003, 2011, 2005, 2003, 2003)
)
# Add the year_implemented to the combined_data
combined_data <- left_join(combined_data, policy_change_years, by = "stname")
# Now we'll create the post_policy and treatment variables
combined_data <- combined_data %>%
mutate(post_policy = if_else(year >= year_implemented, 1, 0, 0),
treatment = if_else(stname %in% policy_change_years$stname, 1, 0))
# For states without a policy change, make sure year_implemented is greater than any year in the dataset
combined_data <- combined_data %>%
mutate(year_implemented = ifelse(is.na(year_implemented), max(year) + 1, year_implemented))
# Define the policy implementation years for the states that changed their policy
policy_change_years <- data.frame(
stname = c("AZ", "GA", "MN", "NC", "OK", "TX", "WV"),
year_implemented = c(2009, 2005, 2003, 2011, 2005, 2003, 2003)
)
# Add the year_implemented to the combined_data
combined_data <- left_join(combined_data, policy_change_years, by = "stname")
# Now we'll create the post_policy and treatment variables
combined_data <- combined_data %>%
mutate(post_policy = if_else(year >= year_implemented, 1, 0, 0),
treatment = if_else(stname %in% policy_change_years$stname, 1, 0))
# For states without a policy change, make sure year_implemented is greater than any year in the dataset
combined_data <- combined_data %>%
mutate(year_implemented = ifelse(is.na(year_implemented), max(year) + 1, year_implemented))
# Now create the interaction term for the DiD analysis
combined_data <- combined_data %>%
mutate(treatment_x_post = treatment * post_policy)
# Check to ensure that we have variation in the treatment_x_post variable
print(table(combined_data$treatment, combined_data$post_policy))
# Run the difference-in-differences regression
did_model <- lm(relative_births ~ treatment + post_policy + treatment_x_post, data = combined_data)
# Get the summary of the model
summary_did <- summary(did_model)
# More detailed output including robust standard errors
robust_summary <- coeftest(did_model, vcov = vcovHC(did_model, type = "HC1"))
# Print the summaries
print(summary_did)
print(robust_summary)
library(dplyr)
library(readxl)
library(readr)
library(haven)
library(lmtest)
library(sandwich)
# Define the policy implementation years for the states that changed their policy
policy_change_years <- data.frame(
stname = c("AZ", "GA", "MN", "NC", "OK", "TX", "WV"),
year_implemented = c(2009, 2005, 2003, 2011, 2005, 2003, 2003)
)
# Add the year_implemented to the combined_data
combined_data <- left_join(combined_data, policy_change_years, by = "stname")
# Now we'll create the post_policy and treatment variables
combined_data <- combined_data %>%
mutate(post_policy = if_else(year >= year_implemented, 1, 0, 0),
treatment = if_else(stname %in% policy_change_years$stname, 1, 0))
# Now we'll create the post_policy and treatment variables
combined_data <- combined_data %>%
mutate(post_policy = if_else(year >= year_implemented, 1, 0, 0),
treatment = if_else(stname %in% policy_change_years$stname, 1, 0))
# Now we'll create the post_policy and treatment variables
combined_data <- combined_data %>%
mutate(post_policy = if_else(year >= year_implemented, 1, 0, 0),
treatment = if_else(stname %in% policy_change_years$stname, 1, 0))
# Add the year_implemented to the combined_data
combined_data <- left_join(combined_data, policy_change_years, by = "stname")
# Now we'll create the post_policy and treatment variables
combined_data <- combined_data %>%
mutate(post_policy = if_else(year >= year_implemented, 1, 0, 0),
treatment = if_else(stname %in% policy_change_years$stname, 1, 0))
# For states without a policy change, make sure year_implemented is greater than any year in the dataset
combined_data <- combined_data %>%
mutate(year_implemented = ifelse(is.na(year_implemented), max(year) + 1, year_implemented))
# Now create the interaction term for the DiD analysis
combined_data <- combined_data %>%
mutate(treatment_x_post = treatment * post_policy)
# Check to ensure that we have variation in the treatment_x_post variable
print(table(combined_data$treatment, combined_data$post_policy))
# Run the difference-in-differences regression
did_model <- lm(relative_births ~ treatment + post_policy + treatment_x_post, data = combined_data)
# Get the summary of the model
summary_did <- summary(did_model)
# More detailed output including robust standard errors
robust_summary <- coeftest(did_model, vcov = vcovHC(did_model, type = "HC1"))
# Print the summaries
print(summary_did)
print(robust_summary)
library(dplyr)
library(readxl)
library(readr)
library(haven)
library(lmtest)
library(sandwich)
policy_change_years <- data.frame(
stname = c("AZ", "GA", "MN", "NC", "OK", "TX", "WV"),
year_implemented = c(2009, 2005, 2003, 2011, 2005, 2003, 2003)
)
combined_data <- left_join(combined_data, policy_change_years, by = "stname")
# Now we'll create the post_policy and treatment variables
combined_data <- combined_data %>%
mutate(post_policy = if_else(year >= year_implemented, 1, 0, 0),
treatment = if_else(stname %in% policy_change_years$stname, 1, 0))
rlang::last_trace()
rlang::last_trace(drop = FALSE)
#### Difference in Difference
policy_changes <- data.frame(
stname = c("AZ", "GA", "MN", "NC", "OK", "TX", "WV"),
year_implemented = c(2009, 2005, 2003, 2011, 2005, 2003, 2003)
)
# Add the year_implemented to the combined_data
combined_data <- left_join(combined_data, policy_changes, by = "stname")
# Create the post_policy and treatment indicators
combined_data <- combined_data %>%
mutate(treatment = if_else(stname %in% policy_changes$stname, 1, 0),
post_policy = if_else(year >= year_implemented, 1, 0, 0),
treatment_x_post = treatment * post_policy)
# Remove NAs from year_implemented for states that never implemented a policy
combined_data <- combined_data %>%
mutate(year_implemented = if_else(is.na(year_implemented), max(year) + 1, year_implemented))
# Now we can perform the DiD analysis
did_model <- lm(relative_births ~ treatment + post_policy + treatment_x_post, data = combined_data)
# Get the summary of the model
summary_did <- summary(did_model)
# Obtain robust standard errors
robust_summary <- coeftest(did_model, vcov = vcovHC(did_model, type = "HC1"))
# Output the summaries
print(summary_did)
print(robust_summary)
#### Difference in Difference
policy_changes <- data.frame(
stname = c("AZ", "GA", "MN", "NC", "OK", "TX", "WV"),
year_implemented = c(2009, 2005, 2003, 2011, 2005, 2003, 2003)
)
# Add the year_implemented to the combined_data
combined_data <- left_join(combined_data, policy_changes, by = "stname")
# Create the post_policy and treatment indicators
# Correct creation of the post_policy and treatment_x_post indicators
combined_data <- combined_data %>%
mutate(post_policy = if_else(year >= year_implemented & treatment == 1, 1, 0),
treatment_x_post = treatment * post_policy)
# Continue with your analysis as before
did_model <- lm(relative_births ~ treatment + post_policy + treatment_x_post, data = combined_data)
# Summary of the model
summary_did <- summary(did_model)
# Obtain robust standard errors
robust_summary <- coeftest(did_model, vcov = vcovHC(did_model, type = "HC1"))
# Output the summaries
print(summary_did)
policy_changes <- data.frame(
stname = c("AZ", "GA", "MN", "NC", "OK", "TX", "WV"),
year_implemented = c(2009, 2005, 2003, 2011, 2005, 2003, 2003)
)
# Add the year_implemented to the combined_data
combined_data <- left_join(combined_data, policy_changes, by = "stname")
# Create the post_policy and treatment indicators
combined_data <- combined_data %>%
mutate(post_policy = if_else(year >= year_implemented & treatment == 1, 1, 0),
treatment_x_post = treatment * post_policy)
# Continue with your analysis as before
did_model <- lm(relative_births ~ treatment + post_policy + treatment_x_post, data = combined_data)
# Summary of the model
summary_did <- summary(did_model)
# Obtain robust standard errors
robust_summary <- coeftest(did_model, vcov = vcovHC(did_model, type = "HC1"))
# Output the summaries
print(summary_did)
print(robust_summary)
# Create the post_policy and treatment indicators
combined_data <- combined_data %>%
mutate(post_policy = if_else(year >= year_implemented, 1, 0)) %>%
mutate(treatment_x_post = if_else(treatment == 1 & post_policy == 1, 1, 0))
# Now, redo the DiD analysis with corrected variables
did_model <- lm(relative_births ~ treatment + post_policy + treatment_x_post, data = combined_data)
# Get the summary of the corrected model
summary_did_corrected <- summary(did_model)
# Obtain robust standard errors for the corrected model
robust_summary_corrected <- coeftest(did_model, vcov = vcovHC(did_model, type = "HC1"))
# Output the summaries of the corrected model
print(summary_did_corrected)
# Filter data for NC and TN from 2001 to 2019
did_data <- combined_data %>%
filter(stname %in% c("NC", "TN"), year >= 2001, year <= 2019)
# Create treatment and post_policy variables
did_data <- did_data %>%
mutate(treatment = if_else(stname == "NC", 1, 0),
post_policy = if_else(year >= 2011, 1, 0),
treatment_x_post = treatment * post_policy)
# Fit the DiD model
did_model <- lm(relative_births ~ treatment + post_policy + treatment_x_post, data = did_data)
# Summary of the DiD model
summary_did <- summary(did_model)
# Obtain robust standard errors
robust_summary <- coeftest(did_model, vcov = vcovHC(did_model, type = "HC1"))
# Output the summaries
print(summary_did)
print(robust_summary)
# For visualization, we can plot the trends of relative births in both states over the years
ggplot(did_data, aes(x = year, y = relative_births, color = stname)) +
geom_line() +
geom_vline(xintercept = 2011, linetype="dashed", color = "red") + # Policy change year
labs(title = "Relative Births in NC (Treatment) and TN (Comparison) Over Time",
x = "Year", y = "Relative Births per 1000 People") +
theme_minimal()
### Optional: Plotting
library(ggplot2)
# For visualization, we can plot the trends of relative births in both states over the years
ggplot(did_data, aes(x = year, y = relative_births, color = stname)) +
geom_line() +
geom_vline(xintercept = 2011, linetype="dashed", color = "red") + # Policy change year
labs(title = "Relative Births in NC (Treatment) and TN (Comparison) Over Time",
x = "Year", y = "Relative Births per 1000 People") +
theme_minimal()
# Load libraries
library(readxl)
library(dplyr)
library(readr)
library(haven)
library(ggplot2)
library(lmtest)
library(sandwich)
# Define file paths for convenience
policy_data_path <- "../data/analysis_data/annual_policy/policyvars01_19.dta"
population_data_path <- "../data/UKCPR_National_Welfare_Data_Update_020623.xlsx"
births_data_path <- "../data/analysis_data/annual_policy/numbirths_2001_2019.csv"
# Load and prepare the abortion policy data
abortion_policy <- read_dta(policy_data_path) %>%
filter(year >= 2001, year <= 2019) %>%
select(year, stname, delay)
# Load and prepare the population data
population_data <- read_excel(population_data_path, sheet = "Data") %>%
select(state_name = stname, year, Population) %>%
filter(year >= 2001, year <= 2019)
# Load and prepare the number of births data
numbirths_data <- read_csv(births_data_path) %>%
rename(births = numbirth1544) %>%
filter(year >= 2001, year <= 2019)
# Merge the datasets
births_population_data <- numbirths_data %>%
left_join(population_data, by = c("year", "stname")) %>%
mutate(relative_births = (births / Population) * 1000)
combined_data <- abortion_policy %>%
left_join(births_population_data, by = c("year", "stname"))
# Define the groups based on predefined 'states_no_delay' and 'states_with_delay'
states_no_delay <- c("AK", "AL", "CA", "CO", "CT", "DC", "DE", "FL", "HI", "IA", "IL", "MA", "MD", "ME", "MT", "NH", "NJ", "NM", "NV", "NY", "OR", "RI", "TN", "VT", "WA", "WY")
states_with_delay <- c("AR", "ID", "IN", "KS", "KY", "LA", "MI", "MO", "MS", "ND", "NE", "OH", "PA", "SC", "SD", "UT", "VA", "WI")
# Filter data for states with no delay and plot
combined_data_no_delay <- combined_data %>%
filter(stname %in% states_no_delay)
ggplot(data = combined_data_no_delay, aes(x = year, y = relative_births, group = stname, color = stname)) +
geom_line() +
labs(title = "Relative Average Number of Births in States Without Delay (2001-2019)",
x = "Year",
y = "Relative Average Number of Births per 1000 People",
color = "State") +
theme_minimal()
# Filter data for states with delay and plot
combined_data_with_delay <- combined_data %>%
filter(stname %in% states_with_delay)
ggplot(data = combined_data_with_delay, aes(x = year, y = relative_births, group = stname, color = stname)) +
geom_line() +
labs(title = "Relative Average Number of Births in States With Delay (2001-2019)",
x = "Year",
y = "Relative Average Number of Births per 1000 People",
color = "State") +
theme_minimal()
# States which had a change in policy and plot
policy_changes <- data.frame(
stname = c("AZ", "GA", "MN", "NC", "OK", "TX", "WV"),
year_implemented = c(2009, 2005, 2003, 2011, 2005, 2003, 2003)
)
transition_states_data <- combined_data %>%
filter(stname %in% policy_changes$stname)
# Filter and plot for states which had a change in policy
transition_states_data <- combined_data %>%
filter(stname %in% policy_changes$stname)
ggplot(data = transition_states_data, aes(x = year, y = relative_births, group = stname, color = stname)) +
geom_line() +
geom_vline(data = policy_changes, aes(xintercept = year_implemented, color = stname), linetype="dashed") +
geom_text(data = policy_changes, aes(x = year_implemented, y = Inf, label = year_implemented), vjust = -0.5, color = "black") +
scale_x_continuous(breaks = seq(2001, 2019, by = 2)) +
labs(title = "Transition to Policy Delay and Relative Average Number of Births (2001-2019)",
x = "Year",
y = "Relative Average Number of Births per 1000 People",
color = "State") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Difference-in-Difference Analysis for NC with a policy change in 2011 compared to a no-delay state
# Here, we need to select a comparable state from the no-delay states. For now, we will proceed with TN as before.
did_data <- combined_data %>%
filter(stname %in% c("NC", "TN"), year >= 2001, year <= 2019) %>%
mutate(treatment = if_else(stname == "NC", 1, 0),
post_policy = if_else(year >= 2011, 1, 0),
treatment_x_post = treatment * post_policy)
# Fit the DiD model
did_model <- lm(relative_births ~ treatment + post_policy + treatment_x_post, data = did_data)
# Summary of the DiD model and robust standard errors
summary_did <- summary(did_model)
robust_summary <- coeftest(did_model, vcov = vcovHC(did_model, type = "HC1"))
# Output the summaries
print(summary_did)
print(robust_summary)
# Plotting for the DiD analysis
ggplot(did_data, aes(x = year, y = relative_births, color = stname)) +
geom_line() +
geom_vline(xintercept = 2011, linetype="dashed", color = "red") + # Policy change year
labs(title = "Relative Births in NC (Treatment) and TN (Comparison) Over Time",
x = "Year", y = "Relative Births per 1000 People") +
theme_minimal()
# Define file paths
policy_data_path <- "../data/analysis_data/annual_policy/policyvars01_19.dta"
colnames(policy_data_path)
# Load and prepare the abortion policy data
abortion_policy <- read_dta(policy_data_path) %>%
filter(year >= 2001, year <= 2019) %>%
select(year, stname, delay)
library(readxl)
library(dplyr)
library(readr)
library(haven)
library(ggplot2)
library(lmtest)
library(sandwich)
abortion_policy <- read_dta(policy_data_path) %>%
filter(year >= 2001, year <= 2019) %>%
select(year, stname, delay)
colnames(policy_data_path)
view(policy_data_path)
View(policy_data_path)
policy_data_path
Print(policy_data_path)
print(policy_data_path)
# Load and prepare the abortion policy data
abortion_policy <- read_dta(policy_data_path) %>%
filter(year >= 2001, year <= 2019) %>%
select(year, stname, delay)
print(abortion_policy)
colnames(abortion_policy)
View(abortion_policy)
